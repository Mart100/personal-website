import{h as i,u as A}from"./_qTfh9x3.js";import{Q as d,R as s,S as m,U as F,V as U}from"#entry";function y(o,a,e){const[t={},r]=typeof a=="string"?[{},a]:[a,e],n=d(()=>s(o)),c=d(()=>s(t.key)||"$f"+i([r,typeof n.value=="string"?n.value:"",...$(t)]));if(!t.baseURL&&typeof n.value=="string"&&n.value[0]==="/"&&n.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:b,lazy:w,default:v,transform:g,pick:k,watch:l,immediate:D,getCachedData:j,deep:O,dedupe:E,...T}=t,h=m({...F,...T,cache:typeof t.cache=="boolean"?void 0:t.cache}),q={server:b,lazy:w,default:v,transform:g,pick:k,immediate:D,getCachedData:j,deep:O,dedupe:E,watch:l===!1?[]:[...l||[],h]};let u;return A(l===!1?c.value:c,()=>{u?.abort?.(new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),u=typeof AbortController<"u"?new AbortController:{};const p=s(t.timeout);let f;return p&&(f=setTimeout(()=>u.abort(new DOMException("Request aborted due to timeout.","AbortError")),p),u.signal.onabort=()=>clearTimeout(f)),(t.$fetch||globalThis.$fetch)(n.value,{signal:u.signal,...h}).finally(()=>{clearTimeout(f)})},q)}function $(o){const a=[s(o.method)?.toUpperCase()||"GET",s(o.baseURL)];for(const e of[o.params||o.query]){const t=s(e);if(!t)continue;const r={};for(const[n,c]of Object.entries(t))r[s(n)]=s(c);a.push(r)}if(o.body){const e=s(o.body);if(!e)a.push(i(e));else if(e instanceof ArrayBuffer)a.push(i(Object.fromEntries([...new Uint8Array(e).entries()].map(([t,r])=>[t,r.toString()]))));else if(e instanceof FormData){const t={};for(const r of e.entries()){const[n,c]=r;t[n]=c instanceof File?c.name:c}a.push(i(t))}else if(U(e))a.push(i(m(e)));else try{a.push(i(e))}catch{console.warn("[useFetch] Failed to hash body",e)}}return a}async function L(){const{data:o}=await y("/api/projects",{method:"GET",headers:{"Content-Type":"application/json"},key:"projects",transform:a=>a.map((e,t)=>(e.created=new Date(e.created),e)),default:()=>[]},"$ImQWKOU4Hs");return o}async function S(){const{data:o}=await y("/api/skills",{method:"GET",headers:{"Content-Type":"application/json"},key:"skills",transform:a=>a,default:()=>[]},"$ymVqBnWD2L");return o}export{S as a,L as f};
